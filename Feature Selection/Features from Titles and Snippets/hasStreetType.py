# -*- coding: utf-8 -*-
'''
Search for a street type in title and snippet
'''

import nltk
from nltk.corpus import stopwords
import string

def get_tokens(text):
	lowers = text.lower()
	# no_punctuation = lowers.translate(string.punctuation)
	no_punctuation = lowers.translate({ord(k): None for k in string.punctuation})
	tokens = nltk.word_tokenize(no_punctuation)
	return tokens

def has_street_type(text):
	street_type = ["ABBEY",
	"ACCESS",
	"ACRES",
	"AIRE",
	"ALLEY",
	"ALLÉE",
	"AUT",
	"AV",
	"AVE",
	"BAY",
	"BEACH",
	"BEND",
	"BLOC",
	"BLOCK",
	"BLVD",
	"BOUL",
	"BOURG",
	"BRGE",
	"BROOK",
	"BYPASS",
	"BYWAY",
	"C",
	"CAMPUS",
	"CAPE",
	"CAR",
	"CARREF",
	"CDS",
	"CERCLE",
	"CH",
	"CHASE",
	"CIR",
	"CIRCT",
	"CLOSE",
	"COMMON",
	"CONC",
	"CÔTE",
	"COUR",
	"COURS",
	"COVE",
	"CRES",
	"CREST",
	"CRNRS",
	"CROFT",
	"CROIS",
	"CROSS",
	"CRSSRD",
	"CRT",
	"CTR",
	"DALE",
	"DELL",
	"DESSTE",
	"DIVERS",
	"DOWNS",
	"DR",
	"DRPASS",
	"ÉCH",
	"END",
	"ESPL",
	"ESTATE",
	"EXPY",
	"EXTEN",
	"FARM",
	"FIELD",
	"FOREST",
	"FRONT",
	"FWY",
	"GATE",
	"GDNS",
	"GLADE",
	"GLEN",
	"GREEN",
	"GRNDS",
	"GROVE",
	"HARBR",
	"HAVEN",
	"HEATH",
	"HGHLDS",
	"HILL",
	"HOLLOW",
	"HTS",
	"HWY",
	"ÎLE",
	"IMP",
	"INLET",
	"ISLAND",
	"KEY",
	"KNOLL",
	"LANDNG",
	"LANE",
	"LANEWY",
	"LINE",
	"LINK",
	"LKOUT",
	"LMTS",
	"LOOP",
	"MALL",
	"MANOR",
	"MAZE",
	"MEADOW",
	"MEWS",
	"MONTÉE",
	"MOOR",
	"MOUNT",
	"MTN",
	"ORCH",
	"PARADE",
	"PARC",
	"PASS",
	"PATH",
	"PEAK",
	"PINES",
	"PK",
	"PKY",
	"PL",
	"PLACE",
	"PLAT",
	"PLAZA",
	"POINTE",
	"PORT",
	"PROM",
	"PT",
	"PTWAY",
	"PVT",
	"QUAI",
	"QUAY",
	"RAMP",
	"RANG",
	"RD",
	"RDPT",
	"REACH",
	"RG",
	"RIDGE",
	"RISE",
	"RLE",
	"ROUTE",
	"ROW",
	"RTE",
	"RTOFWY",
	"RUE",
	"RUIS",
	"RUN",
	"SECTN",
	"SENT",
	"SIDERD",
	"SQ",
	"ST",
	"STROLL",
	"SUBDIV",
	"TERR",
	"THICK",
	"TLINE",
	"TOWERS",
	"TRACE",
	"TRAIL",
	"TRNABT",
	"TRUNK",
	"TSSE",
	"VALE",
	"VIA",
	"VIEW",
	"VILLAS",
	"VILLGE",
	"VISTA",
	"VOIE",
	"WALK",
	"WAY",
	"WHARF",
	"WOOD",
	"WYND"]

	Streettype = {'hasStreetType':0}
	tokens = get_tokens(text)
	filtered = [w for w in tokens if not w in stopwords.words('english') and not w.isdigit()]
	for streettype in street_type:
		for word in filtered:
			if streettype.upper() == word.upper():
				Streettype['hasStreetType'] = 1
				break
			else:
				pass

	return Streettype